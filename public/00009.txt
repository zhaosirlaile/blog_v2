## vim的三种模式

- 命令模式
  - 在该模式下是不能对文件直接编辑，可以输入快捷键进行一些操作（删除行，复制行，移动光标，粘贴等等）
  - 打开之后`默认`进入的模式
- 编辑模式（输入模式）
  - 在该模式下可以对文件的内容进行编辑
- 末行模式（尾行模式）
  - 可以在末行输入命令来对文件进行操作（搜索、替换、保存、退出、撤销、高亮等等）



## 运用 vim 打开文件

### 方法一

直接打开指定的文件

```shell
vim 文件路径
```

### 方法二

打开指定的文件，并且将光标移动到指定的第`n`行

```shell
vim +n 文件的路径
```

### 方法三

打开指定的文件，并且高亮显示关键词

```shell
vim +/关键词 文件的路径
```

### 方法四

同时打开多个文件

```shell
vim 文件路径1 文件路径2 文件路径3 文件路径4...
```



## 模式间的切换

![在这里插入图片描述](http://zhaosirlaile.oss-cn-beijing.aliyuncs.com/contentImg/20190407200911767.png)



## 命令模式

该模式是打开文件的第一个看到的模式（打开文件即可进入）

### 光标移动操作

- 光标移动到行首
  - 按键：`shift + 6 或 ^` （不是小键盘上的6）
- 光标移动到行尾
  - 按键：`shift + 4 或 $ ` （不是小键盘上的 4）
- 光标移动到首行
  - 按键：`gg`
- 光标移动到末行
  - 按键：`G`
- 翻屏
  - 向上翻屏
    - 按键：`ctrl + b`  （before）或  `PgUp`
  - 向下翻屏
    - 按键：`Ctrl + f `  （after）或 `PgDn`

### 复制粘贴操作

- 复制光标所在行
  - 按键：`yy`
  - 粘贴：在想要的地方按下 `p` 键
- 以光标所在行为准（包含当前行）向下复制指定的行数
  - 按键：`数字 yy`
  - 粘贴：在想要的地方按下 `p` 键
- 可视化复制
  - 按键：`ctrl + v` ，按下上下左右方向键来选中选中需要的区块，按下 `yy` 键进行复制
  - 粘贴：在想要的地方按下 `p` 键

### 剪切删除操作

- 剪切/删除光标所在行
  - 按键：`dd` 
  - 而删除之后的下一行会往上移动
  - `dd` 严格意义上说是剪切命令，但是如果剪切了不粘贴就是删除的效果
  - 粘贴：在想要的地方按下 `p` 键
- 剪切/删除光标所在行为准，向下删除/剪切指定的行
  - 按键：`数字 dd`
  - 而删除之后的下一行会往上移动
  - 粘贴：在想要的地方按下 `p` 键
- 剪切/删除光标所在行为准，但是删除之后的下一行会不会上移动
  - 按键：`D`
  - 当前行会变为空白行

### 撤销恢复操作

- 撤销
  - 输入 `:u`（不属于命令模式） 或者 `u`
- 恢复
  - 按键：`ctrl + r` 恢复（取消）之前的撤销操作

### 光标的快速移动

- 快速将光标移动到指定的行
  - 按键：`数字 G`
- 以当前光标为准向上/下移动 n 行
  - 按键
    - `数字 ↑`
      - 向上移动 n 行
    - `数字 ↓`
      - 向下移动 n 行
- 以当前光标为准向左/向右动 n 行
  - 按键
    - `数字 ←`
      - 向左移动 n 行
    - `数字 →`
      - 向右移动 n 行

## 末行模式

在命令模式中，按下 ":" 即可进入

退出方式：

- 按下 `esc` 键
- 连按 2 次 `esc键`
- 删除末行全部输入字符

### 保存/退出操作

- 保存
  - 输入：`:w` 
    - 保存文件
  - 输入：`:w 路径`
    - 另存为文件
- 退出
  - 输入：`:q`
    - 退出文件
- 保存并退出
  - 输入：`:x`
  - 输入：`:wq`
- 强制退出
  - 输入：`:q!`
    - 刚才做的修改操作不做保存

### 调用外部命令

输入：`:! 外部命令`

按任意键回到 vim 末行模式

### 搜索/查找

输入：`/关键词`

搜索结果中切换上/下结果是：`N/n`

### 取消高亮

（no highlight）

输入：`:nohl`

### 替换

- 输入：`:s/搜索的关键词/新的关键词`
  - 替换光标所在行的第一处符合条件的内容
- 输入：`:s/搜索的关键词/新的关键词/g`
  - 替换光标所在行的全部符合条件的内容
- 输入：`%s/搜索的关键词/新的类容`
  - 替换整个文件中每行第一个符合条件的内容分
- 输入：`%s 搜索的关键词/新的内容/g`
  - 替换真个文档符合条件的内容

其中：`%` 表示整个文件,`g`表示全局（global）

### 显示行号

输入：`:set nu `  

取消行号，则输入：`:set nonu`

------

## 编辑模式

命令模式下进入编辑模式：

- `i` : 在光标所在字符前开始插入（insert）
- `a` : 在光标所在字符后开始插入（after）
- `o` : 在光标所在行的下面另起一新行插入
- `I` : 在光标所在行的行首开始插入 如果行首有空格则在空格之后插入
- `A` : 在光标所在行的行尾开始插入
- `O` : 在光标所在行的上面另起一行开始插入
- `S` : 删除光标所在行并开始插入

## 打开多个文件、进行切换

先打开多个文件

```shell
vim 文件路径1 文件路径2... 
```

在末行模式下：

输入：`:files`

![在这里插入图片描述](http://zhaosirlaile.oss-cn-beijing.aliyuncs.com/contentImg/20190407201237480.png)



如上图所示：

- `%a` 表示：
  - a = active ，表示当前正在打开的文件
- `#` 表示：
  - 上一个打开的文件

### 切换文件

- 如果需要指定切换文件的名称
  - 则可以输入：`:open 文件名`
- 可以通过其他命令来切换上一个文件/下一个文件
  - 输入：`:bn`（n : next）
    - 切换到下一个文件
  - 输入：`:bp`（p：prev）
    - 切换到上一个文件
## vim 配置的三种情况

1. 在文件打开的时候在末行模式下输入的配置（临时的）
2. 个人配置文件（一个隐藏文件,在自己家目录下 `/.vimrc`，如果没有可以自行新建）
3. 全局配置文件（vim 自带，`/etc/vimrc`）



## 个人配置文件

1. 新建好个人配置文件之后进入编辑（文件名一定是`.vimrc`，否则就设置不了）
2. 在配置文件中进行配置

```shell
set nu	 	#显示行号
syntax on	#显示着色
```



`注意:`

如果 个人配置和全局配置 之间有冲突，则以个人配置为准



时间：2019年4月7日20:10:16
